{% set name = "eventlet" %}
{% set version = "0.40.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 290852db0065d78cec17a821b78c8a51cafb820a792796a354592ae4d5fceeb0

build:
  number: 0
  skip: True  # [py<39]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation --ignore-installed --no-cache-dir -vv

requirements:
  host:
    - python
    - pip
    - hatch-vcs >=0.3
    - hatchling >=1.12.2
  run:
    - python
    - greenlet >=1.0
    - dnspython >=1.15.0


# Mass failing testst due to greenlet FdListener('read', -1, â€¦)
#================================================================
# $SRC_DIR/tests/__init__.py:245: AssertionError: Readers: Listener FdListener('read', 
# -1, <function select.<locals>.on_read at 0x106cdf740>, <built-in method throw of greenlet.greenlet 
# object at 0x103a0e240>) for greenlet <greenlet.greenlet object at 0x103a0e240 (otid=0x1039bb1b0) 
# current active started main> with run callback None (1) Writers:  (0)

# E   AssertionError: Readers: Listener FdListener('read', -1, <function select.<locals>.on_read at 0x10870e840>, <built-in method throw of greenlet.greenlet object at 0x10468cb80>) for greenlet <greenlet.greenlet object at 0x10468cb80 (otid=0x10463e5b0) current active started main> with run callback None (1) Writers:  (0)
# ___ TestWebSocketWithCompression.test_accept_deflate_ext_context_takeover_13 ___
# tests/wsgi_test.py:245: in tearDown
#     super().tearDown()
# tests/__init__.py:194: in tearDown
#     verify_hub_empty()
# tests/__init__.py:245: in verify_hub_empty
#     assert num_readers == 0 and num_writers == 0, \

{% set SKIP_TEST_FILES = [
    "tests/mysqldb_test.py",
    "tests/patcher_test.py",
    "tests/queue_test.py",
    "tests/semaphore_test.py",
    "tests/ssl_test.py",
    "tests/timeout_test.py",
    "tests/timeout_with_statement_test.py",
    "tests/tpool_test.py",
    "tests/websocket_test.py",
    "tests/websocket_new_test.py",
    "tests/wsgi_test.py",
    "tests/zmq_test.py",
    "tests/patcher_psycopg_test.py",
    "tests/test__event.py"
] %}

{% set SKIP_TEST_OSX = [
    "test_assignment",
    "test_calling_methods",
    "test_calls_init",
    "test_no_leaking",
    "test_repeated_select_bad_fd",
    "test_kill",
    "test_parent"
] %}

{% set SKIP_TEST_LINUX = [
    "test_against_findmnt",
] %}

{% set SKIP_TEST_WIN = [
    "test_users",
] %}

{% set SKIP_TEST_LIST = [] %}
{% set SKIP_TEST_LIST = SKIP_TEST_LIST + SKIP_TEST_OSX %}  # [osx]
{% set SKIP_TEST_LIST = SKIP_TEST_LIST + SKIP_TEST_LINUX %}  # [linux]
{% set SKIP_TEST_LIST = SKIP_TEST_LIST + SKIP_TEST_WIN %}  # [win]

test:
  source_files:
    - tests
  imports:
    - eventlet
    - eventlet._version
    - eventlet.asyncio
    - eventlet.corolocal
    - eventlet.dagpool
    - eventlet.event
    - eventlet.green
    - eventlet.greenio
    - eventlet.greenthread
    - eventlet.hubs
    - eventlet.lock
    - eventlet.patcher
    - eventlet.pools
    - eventlet.semaphore
    - eventlet.support
    - eventlet.timeout
    - eventlet.tpool
    - eventlet.websocket
    - eventlet.zipkin
  requires:
    - pip
    - pytest
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert version('{{ name }}') == '{{ version }}'"
    - pytest -ra -v --tb=short tests {% for file in SKIP_TEST_FILES %} --ignore={{ file }}{% endfor %} -v -k "not slow and not ({{ SKIP_TEST_LIST | join(' or ') }})"

about:
  home: https://github.com/eventlet/eventlet
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Highly concurrent networking library
  dev_url: https://github.com/eventlet/eventlet
  doc_url: https://eventlet.readthedocs.io

extra:
  recipe-maintainers:
    - synapticarbors
    - anguslees
    - pmlandwehr
